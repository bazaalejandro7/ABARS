Courses	Credits	Corequisite	Prerequisite		Course Description
EGR101	2	null	null	null	This course is an introduction to the interdisciplinary aspects of the engineering of aerospace systems. It is a project-based course, demonstrating how the engineering profession is a multi-disciplinary field. Students are involved in an array of conceptual exercises, simple design activities, and projects dealing with engineering in aerospace-related areas.
EGR115	3	null	null	null	This is an introductory course in programming and computing for scientists and engineers. The course introduces students to the following aspects of software engineering: specification, requirements, design, code, and test. This course uses a problem-solving approach for developing algorithms. The following topics will be included: data types and related operations, looping, decision, input/output, functions, arrays, files, and plotting.
COM122	3	null	null	null	This course focuses on the principles of using writing for thinking, as well as a tool for expressing ideas. It addresses the composing process, research and documentation, and rhetorical strategies for various audiences and purposes. Students develop their communicative, evaluative, critical thinking, and research writing abilities.
UNIV101	1	null	null	null	A course in which students assess and develop the personal, interpersonal, intellectual, and social skills necessary to succeed in college. Time management, study skills, goal clarification, career information, and college resources are included. This course is available to freshmen only.
MA241	4	null	null	null	Limits and continuity; differentiation and integration of algebraic and elementary transcendental functions; applications of first and second derivatives.
PS150	3	null	null	null	This course explores vectors and scalar quantities; kinematics; Newton's Law of Motion; work; work-energy; conversion of energy; conversion of momentum; center of mass and its motion, torque, equilibrium; and orbital motion.
CS225	4	null	EGR115	null	This course emphasizes program design, style, data abstraction, information hiding, and testing; advanced programming features; and introduction to object-oriented concepts, basics of algorithm analysis, exception handling, string processing, recursion, pointers, and simple data structures. The course has a closed laboratory that includes activities dealing with the computing environment, the software development process, and programming exercises.
HU14X	3	null	COM122	null	HU 14X course
SS1XX	3	null	null	null	SS 1XX course
MA242	4	null	MA241	null	Differentiation and integration of transcendental functions; special integration techniques; applications of the definite integral; numerical methods; infinite series.
PS160	3	null	PS150	null	This is a calculus-based study of the fundamental principles of classical mechanics. Topics include rotational motion, simple harmonic motion, waves, fluid, heat, kinetic energy, and thermodynamics.
CS222	3	null	null	null	An introduction to the fundamental algebraic, logical, and combinatorial concepts of mathematics that provide a foundation for the study of computer science. 
COM219	3	null	COM122	null	A continuation of the study of communication and communication theory with emphasis on overcoming communication apprehension, developing listening skills, mastering oral performance, and writing about communication. Individual sections may focus on public speaking, group discussion, oral interpretation, or interpersonal communication. Section emphasis varies by instructor and is listed in the Schedule of Courses.
CEC220	3	null	null	null	Introduction to logic design and interfacing digital circuits. Boolean algebra, combinatorial logic circuits, digital multiplexers, circuit minimization techniques, flip-flop storage elements, shift registers, counting devices, and sequential logic circuits.
CEC222	1	CEC220	null	null	Laboratory experiments in the measurement and verification of digital circuits. Discrete and integrated logic circuit design analysis and measurements.
PS250	3	null	MA242	PS160	This course is a calculus-based study of the fundamental principles of classical mechanics. It is the third course of a three-semester sequence, intended for students of science and engineering and is designed to provide the student with an appropriate background for more advanced physics and engineering course work. Topics of discussion include electric forces; electric field; Gauss's law; Ohm's law; Ampere's law; Faraday's law; Lenz's law; Kirchhoff's law and Maxwell's equations; electric potential and electrostatic potential energy; capacitance; simple DC circuit theory; magnetic force, magnetic field; inductance; electromagnetic oscillations and wave propagation; linear accelerators; and cyclotrons.
PS253	1	PS250	MA242	PS160	One three-hour laboratory session per week, with experiments complementing the material of PS 250. Primarily lab report writing workshop, error analysis, damped harmonic oscillations, spectrometers, optics, atomic physics, thermodynamics and circuit theory.
SE300	4	null	CS225	null	This variable credit course introduces students to the fundamental principles and methodologies of large-scale software development. Students learn about the theory and practice of software engineering and work as part of a team on a full life-cycle software project that includes planning, software specification, software design, coding, inspections, and testing. A closed laboratory is required, and includes activities that guide project teams through a software development process and support team project activities such as team building, planning, requirements analysis and  specification, design, testing, and the use of tools.
COM221	3	null	HU14X	null	This course introduces students to the preparation of formal and informal technical reports, abstracts, proposals, instructions, professional correspondence and other forms of technical communication. Major emphasis is placed on the long technical report and the acquisition of advanced writing skills.
AS120	3	null	null	null	An introductory course in Aeronautical Science designed to provide the student with a broad-based aviation orientation in flight-related areas appropriate to all non-Aeronautical Science degree programs. Subjects include historical developments in aviation and the airline industry; theory of flight; airport operations; aircraft systems and performance; elements of air navigation; basic meteorology theory; air traffic principles; flight physiology; and aviation regulations and safety.  Not available to Aeronautical Science students, students with FAA pilot certificates, or students who have credit for AS 121.
CEC320	3	null	CEC220	CEC222	Study of digital computer organizations. Introduction to microcomputer systems using a current microprocessor. Assembly language programming techniques for microcomputers will be used to study digital computer operation. Input and output techniques, memory devices, RS 232, and other interfacing techniques will be studied. Hardware and software relationships will also be discussed.
CEC322	1	CEC320	CEC220	CEC222	Hands-on experience with a microprocessor is provided through weekly experiments involving hardware and software techniques.
HU/SS/3XX/4XX	3	null	null	null	Upper Level HU/SS course
CS332	3	null	CS222	CS225	A comparative study of different programming paradigms. Students program in several languages chosen to illustrate the essential features of the paradigms studied. Formal language concepts are also introduced.
CS315	3	null	CS222	CS225	This course emphasizes the design, implementation, and analysis of algorithms dealing with searching, sorting, graphs, trees, and disk files.
SE320	3	null	SE300	null	This course provides the student with advanced  instruction in programming with an object-oriented programming language. The course objective is proficiency in use of a language widely used for general purpose software development. In addition, the student will be introduced to tools and processes appropriate for employing this language in a significant software development environment. Students attending this course must already be proficient in the use of one major programming language and have knowledge of basic software engineering practices.
CEC470	3	null	CEC320	CEC322	This course describes in detail the Von Neuman computer architecture, which includes processors, memory, input/ output, and transfer of information; examples of machine language, assembly language, microprogramming, and operating systems will be discussed. Additional topics in advanced computer architecture and computer systems will be covered.
CS420	3	null	CS225	null	Development, structure, and functions of operating systems; demand service models; development of concurrent models. Pre-Requisite: Junior standing
EC225	3	null	null	null	An introduction to microeconomic principles, problems, and policies as well as basic financial principles such as time value of money, capital budgeting, and cost of capital. The course will provide the engineering graduate with the tools needed for success in the workplace.
CS317	3	null	CS222	null	Introduction to file and database systems. The course will cover the theory of database systems, various database models, and the design of a database system. Course homework will reflect real-life problems requiring cooperation, problem formulation, and problem-solving skills. A team/group term project may be assigned.
SE410	3	null	CS222	SE300	This course focuses on the study of formal concepts and techniques used to model and analyze software artifacts (requirements, design, and code). The course includes a survey of mathematical modeling techniques used in software engineering. Course activities include reading, discussion, and exercises concerned with the use of formal mathematical models in software engineering. Examples include work on a formal specification project, study of concepts and technology of formal model checking, use of a formal modeling tool, and presentations on articles about recent work in application and research in formal methods.
SE310	3	null	SE300	null	This course focuses on the fundamental methods employed in the analysis and design of software systems. Analysis is the process of determining a complete and consistent set of system requirements. Design is the process of producing a system architecture, both logical and physical, and determining an appropriate way to construct the software. The result of these processes is a documented model of the desired system. The student will learn and practice methods appropriate for both object-oriented and procedural systems.
CEC450	3	null	CEC320	CS225	The course introduces the concepts of real-time systems from the user and designer viewpoint. The requirements, design, implementation, and basic properties of real-time application software are described with an overview of system software. Related topics such as interrupts, concurrent task synchronization, sharing resources, and software reliability are discussed. A team project on a real-time prototype application may be incorporated in the course.
MA3XX/4XX	3	null	MA242	null	Upper Level MA course
SE450	3	null	SE310	null	This is the first course in the sequence of a two-course senior project (SE 450 and SE 451). The senior project sequence of courses is the continuation of SE 300. They provide for additional student activities with the management, analysis, design, implementation, and testing of a software system. Students work in teams and use a defined software process to develop or modify a software product. Project work is assessed using industrial software standards and review techniques. The senior project sequence is considered the capstone course for undergraduate students in software engineering. The first course in this sequence (SE 450) emphasizes the early stages of the software development life cycle (requirements, analysis, and design). The artifacts developed during this course will be used as the foundation for further development during the second course in the sequence (SE 451).
CEC/CS/SE3XX/4XX	3	null	null	null	Upper Level CEC/CS/SE course
SS/HUXXX	3	null	null	null	Any SS/HU course
MA412	3	null	MA242	null	Finite sample spaces; conditional probability and Bayes Theorem, discrete and continuous random variables and their functions; expected value, variance, and standard deviation; systematic study of the major discrete and continuous distributions; moment generating functions; hypothesis testing and estimation.
SE451	3	null	SE410	SE450	This is the second course in the senior project sequence (SE 450 and SE 451). This is the continuation of SE 450. This course provides for additional student activities with the management, analysis, design, implementation, and testing of a software system. Students work in teams and use a defined software process to develop or modify a software product. Project work is assessed using industrial software standards and review techniques. The senior project sequence is considered the capstone course for undergraduate students in software engineering. The second course in this sequence (SE 451) emphasizes the later stages of the software development life cycle (design, implementation, testing, and maintenance). The artifacts developed during the first course (SE 450) will be used as the foundation for further development during this course (SE 451).
SE420	3	SE451	SE300	null	This course exposes the student to the key concepts and practices in software testing and quality assurance. The objective of this course is to introduce students to the concepts of software quality through testing, inspection, and walkthrough. The process of software testing and different testing techniques and methodologies will be covered. This course also covers topics related to the management of a testing project. Finally, different software-testing tools and their advantages and disadvantages will be discussed.
